apiVersion: v1
kind: ServiceAccount
metadata:
  name: webhook-receiver
  namespace: container-registry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: webhook-receiver
  namespace: container-registry
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "get", "list", "watch", "delete"]
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: webhook-receiver
  namespace: container-registry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: webhook-receiver
subjects:
- kind: ServiceAccount
  name: webhook-receiver
  namespace: container-registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-receiver
  namespace: container-registry
  labels:
    app: webhook-receiver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-receiver
  template:
    metadata:
      labels:
        app: webhook-receiver
    spec:
      serviceAccountName: webhook-receiver
      containers:
      - name: webhook-receiver
        image: registry.home.mcztest.com/webhook-receiver:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-receiver
  namespace: container-registry
  labels:
    app: webhook-receiver
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: webhook-receiver
