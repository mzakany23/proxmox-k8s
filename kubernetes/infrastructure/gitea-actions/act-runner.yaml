apiVersion: v1
kind: Namespace
metadata:
  name: gitea-actions
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: act-runner-config
  namespace: gitea-actions
data:
  config.yaml: |
    log:
      level: info
    runner:
      file: .runner
      capacity: 2
      envs: {}
      env_file: .env
      timeout: 3h
      insecure: false
      fetch_timeout: 5s
      fetch_interval: 2s
    cache:
      enabled: true
      dir: ""
      host: ""
      port: 0
      external_server: ""
    container:
      network: "host"
      privileged: false
      options: ""
      workdir_parent: ""
      valid_volumes: []
      docker_host: "tcp://localhost:2375"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: act-runner
  namespace: gitea-actions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: act-runner
  namespace: gitea-actions
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["create", "get", "list", "watch", "delete"]
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "create"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: act-runner
  namespace: gitea-actions
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: act-runner
subjects:
- kind: ServiceAccount
  name: act-runner
  namespace: gitea-actions
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: act-runner
  namespace: gitea-actions
  labels:
    app: act-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: act-runner
  template:
    metadata:
      labels:
        app: act-runner
    spec:
      serviceAccountName: act-runner
      containers:
      - name: docker-dind
        image: docker:dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        volumeMounts:
        - name: docker-storage
          mountPath: /var/lib/docker
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
      - name: runner
        image: gitea/act_runner:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Waiting for Docker to be ready..."
            for i in $(seq 1 30); do
              if nc -z localhost 2375 >/dev/null 2>&1; then
                echo "Docker is ready!"
                break
              fi
              echo "Waiting for Docker... ($i/30)"
              sleep 2
            done

            echo "Registering runner..."
            if [ ! -f /data/.runner ]; then
              act_runner register --no-interactive \
                --instance "${GITEA_INSTANCE_URL}" \
                --token "${GITEA_RUNNER_REGISTRATION_TOKEN}" \
                --name "${GITEA_RUNNER_NAME}" \
                --labels "${GITEA_RUNNER_LABELS}"
            else
              echo "Runner already registered"
            fi

            echo "Starting runner daemon..."
            exec act_runner daemon
        env:
        - name: CONFIG_FILE
          value: /config/config.yaml
        - name: GITEA_INSTANCE_URL
          value: http://gitea-http.gitea.svc.cluster.local:3000
        - name: GITEA_RUNNER_REGISTRATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: gitea-runner-token
              key: token
        - name: GITEA_RUNNER_NAME
          value: k8s-runner
        - name: GITEA_RUNNER_LABELS
          value: ubuntu-latest:docker://node:20-bullseye,ubuntu-22.04:docker://node:20-bullseye
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        volumeMounts:
        - name: config
          mountPath: /config
        - name: runner-data
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
      volumes:
      - name: config
        configMap:
          name: act-runner-config
      - name: runner-data
        emptyDir: {}
      - name: docker-storage
        emptyDir: {}
